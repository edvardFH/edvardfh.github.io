var d=Object.defineProperty;var c=r=>{throw TypeError(r)};var y=(r,t,e)=>t in r?d(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var o=(r,t,e)=>y(r,typeof t!="symbol"?t+"":t,e),p=(r,t,e)=>t.has(r)||c("Cannot "+e);var i=(r,t,e)=>(p(r,t,"read from private field"),e?e.call(r):t.get(r)),E=(r,t,e)=>t.has(r)?c("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(r):t.set(r,e),O=(r,t,e,l)=>(p(r,t,"write to private field"),l?l.call(r,e):t.set(r,e),e);const u=class u{constructor(){}isOfType(t){return s}filter(t){return this}flat(){return this}flatMap(t){return this}reduce(t,e){return e}forEach(t){}fold(t,e){return t()}getOrElse(t){return t}orElse(t){return t()}isEmpty(){return!0}map(t){return this}};o(u,"instance",new u);let f=u;const s=f.instance;var n;const h=class h{constructor(t){E(this,n);O(this,n,t)}isOfType(t){return t(i(this,n))?this:s}filter(t){return t(i(this,n))?this:s}flat(){return i(this,n)instanceof h?i(this,n):s}flatMap(t){return t(i(this,n))}reduce(t,e){return t(i(this,n))}fold(t,e){return e(i(this,n))}forEach(t){t(i(this,n))}getOrElse(t){return i(this,n)}orElse(t){return this}isEmpty(){return!1}map(t){return m(t(i(this,n)))}};n=new WeakMap;let a=h;function m(r){return r==null||typeof r=="number"&&isNaN(r)?s:new a(r)}export{m as O};
